generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model User {
    id                     String                  @id
    email                  String                  @unique
    hashedPass             String?
    isEmailVerified        Boolean                 @default(false)
    PictureUrl             String?
    name                   String
    role                   Role                    @default(USER)
    EmailVerificationToken EmailVerificationToken?
    oauthAccount           OAuthAccount[]
    PasswordResteToken     PasswordResetToken?
    sessions               Session[]
}

model PasswordResetToken {
    email      String   @unique
    resetToken String
    sentAt     DateTime
    user       User     @relation(fields: [email], references: [email], onDelete: Cascade)
}

model OAuthAccount {
    userId         String
    provider       String
    providerUserId String
    accessToken    String
    refreshToken   String?
    expiresAt      DateTime?
    user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([provider, providerUserId])
}

model Session {
    id        String   @id
    userId    String
    expiresAt DateTime
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model EmailVerificationToken {
    userId String   @id
    token  String
    sentAt DateTime
    user   User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, token])
}

enum Role {
    USER
    EDITOR
    REVIEWER
    ASSISTANT_ADMIN
    ADMIN
}
